#!/usr/bin/env bash

# Constants
VERSION=0.0.1
DISCORD_PATH="${HOME}/.config/discord"
GLASSCORD_PATH="${DISCORD_PATH}/glasscord"
USED_DISCORD_VERSION_FILE="${GLASSCORD_PATH}/used_discord_version"
GLASSCORD_VERSION_FILE="${GLASSCORD_PATH}/glasscord_version"

HELPMSG="Glasscordctl version ${VERSION}\n\ninstall - installs glasscord\nupdate - updates an installation\nuninstall - uninstalls glasscord\nreinstall - uninstalls and then installs glasscord\nhelp - shows this message\nversion - prints the version of this script\ninfo - print info about install"

latest_release_link () {
	curl "https://api.github.com/repos/AryToNex/Glasscord/releases/latest" -s | awk '/browser_download_url/ { print $2 }' | cut -d '"' -f 2
}

latest_glasscord_version () {
	curl "https://api.github.com/repos/AryToNex/Glasscord/releases/latest" -s | awk '/tag_name/ { print $2 }' | cut -d '"' -f 2
}

used_glasscord_version () {
	cat "${GLASSCORD_VERSION_FILE}"
}

# Gives you the latest version of discord
discord_versions () {
	ls ${DISCORD_PATH} -l | awk '/[0-9]+\.[0-9]+\.[0-9]+/ { print $9 }'
}

# Gives you the latest version of discord
latest_discord_version () {
	discord_versions | sort -nr | sed '1q'
}

# Gives you the used version of discord
used_discord_version () {
	cat "${USED_DISCORD_VERSION_FILE}"
}

# Takes 1 arg an installs to that dir
install_to () {
	newdir=`find "${DISCORD_PATH}/${1}" -type d -name 'discord_desktop_core' | sed '1q'`
	echo "require('${GLASSCORD_PATH}/glasscord.asar')" | cat - "${newdir}/index.js" > "/tmp/index.js"
	cat "/tmp/index.js" > "${newdir}/index.js"
	rm "/tmp/index.js"
}

# Check if it should move to another directory
update () {
	if [ ! -f "${USED_DISCORD_VERSION_FILE}" ]; then
		echo "Can't update before install"
		return
	fi

	if [ ! -f "${GLASSCORD_PATH}/glasscord.asar" ]; then
		echo "Can't update before install"
		return
	fi

	if [[ `used_discord_version` != `latest_discord_version` ]]; then
		echo "Installing for latest discord version"
		install_to `latest_discord_version`
	else
		echo "Already installed for latest discord version"
	fi

	if [[ `used_glasscord_version` != `latest_glasscord_version` ]]; then
		echo "Downloading latest release of Glasscord."
		curl `latest_release_link` -sLo "${GLASSCORD_PATH}/glasscord.asar" &&\
		echo `latest_glasscord_version` > "${GLASSCORD_VERSION_FILE}" || {
			echo "Update failed, if you can no longer launch the older version, please uninstall and install Glasscord"
		}
	else
		echo "Already installed latest Glasscord version."
	fi
}

install () {
	if [ ! -d ${DISCORD_PATH} ]; then
		echo "Your discord directory doesn't seem to exist, if you are sure you have discord installed, please find it's config directory, then edit the variable called 'DISCORD_PATH' at the top of this file to match it"
		exit
	fi

	if [ ! -d ${GLASSCORD_PATH} ]; then
		mkdir -p "${GLASSCORD_PATH}"
		curl `latest_release_link` -sLo "${GLASSCORD_PATH}/glasscord.asar" &&\
		install_to `latest_discord_version` &&\
		latest_discord_version > "${USED_DISCORD_VERSION_FILE}" &&\
		`latest_glasscord_version` > "${GLASSCORD_VERSION_FILE}" || {
			echo "Installation failed, removing files."
			uninstall
			exit
		}
		echo "Sucessfully updated Glasscord"
	else
		echo "Already installed"
	fi
}

uninstall () {
	if [ -d ${GLASSCORD_PATH} ]; then
		for version in `discord_versions`; do
			uninstall_from ${version}
		done
		rm "${GLASSCORD_PATH}"
		echo "Sucessfully uninstalled Glasscord"
	else
		echo "Glasscord is not installed"
	fi
}

case $1 in
	update)
		update
		;;
	install)
		install
		;;
	uninstall)
		uninstall
		;;
	reinstall)
		uninstall
		install
		;;
	help)
		echo -e "${HELPMSG}"
		;;
	version)
		echo -e "${VERSION}"
		;;
	info)
		if [ -d ${GLASSCORD_PATH} ]; then
			echo -e "Discord version: `used_discord_version` Glasscord version: `used_glasscord_version`"
		else
			echo "Glasscord is not installed"
		fi
		;;
esac
